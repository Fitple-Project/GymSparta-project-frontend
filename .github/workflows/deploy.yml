name: Deploy Frontend

on:
  push:
    branches: [ 4-feat-이재석 ]  # 프론트엔드 배포를 트리거할 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Node.js 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 사용 중인 Node.js 버전 설정

      # 프로젝트 종속성 설치
      - name: Install dependencies
        run: npm install

      # .env 파일 내용 환경 변수로 설정
      - name: Export .env variables
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
          echo "VUE_APP_PORT=${{ secrets.VUE_APP_PORT }}" >> $GITHUB_ENV
          echo "VUE_APP_GOOGLE_MAPS_API_KEY=${{ secrets.VUE_APP_GOOGLE_MAPS_API_KEY }}" >> $GITHUB_ENV
          echo "VUE_APP_API_URL=${{ secrets.VUE_APP_API_URL }}" >> $GITHUB_ENV

      # 프로젝트 빌드
      - name: Build the project
        run: npm run build  # build 스크립트는 package.json에 정의되어 있어야 함

      # S3 버킷에 파일 업로드
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete  # S3 버킷에서 삭제된 파일도 제거
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}  # S3 버킷 이름
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS 액세스 키
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS 시크릿 키
          AWS_REGION: ap-northeast-2  # S3 버킷의 리전
          SOURCE_DIR: 'dist'  # 빌드된 파일이 있는 디렉토리

      # CloudFront 캐시 무효화
      - name: Invalidate CloudFront Cache
        uses: aws-actions/aws-cloudfront-invalidate-cache@v2
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          paths: "/*"
        env:
          AWS_REGION: ap-northeast-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}